name: Deploy application

on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        required: true
        type: string
      HELM_CHARTS:
        required: true
        type: string
    secrets:
      DIGITALOCEAN_ACCESS_TOKEN:
        required: true

env:
  CONTAINER_REGISTRY: registry.digitalocean.com/tmsolution-cr

jobs:
  # compute_tag:
  #   name: Compute tag.
  #   runs-on: ubuntu-latest
  #   # Map a step output to a job output
  #   outputs:
  #     TAG: ${{ steps.build-tag.outputs.tag-output }}      
  #   steps:
  #     - id: build-tag
  #       run: echo "tag-output=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_OUTPUT

  helm_deploy:
    name: Deploy app using helm.
    runs-on: ubuntu-latest
    needs: compute_tag
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v3
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with: 
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Lint helm chart
        run: helm lint ${{inputs.HELM_CHARTS}}
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 tmsolution-k8s
      - name: Create CR secrets
        run: doctl registry kubernetes-manifest | kubectl apply -f -
      - name: Helm deploy
        run:
          helm upgrade ${{inputs.IMAGE_NAME}} ${{inputs.HELM_CHARTS}} 
          --install 
          --timeout 300s
          --atomic
          --set image.repository=${{env.CONTAINER_REGISTRY}}/${{inputs.IMAGE_NAME}}
          --set image.tag=$(echo $GITHUB_SHA | head -c7)
          --set imagePullSecrets[0].name=registry-tmsolution-cr
      - name: Verify deployment
        run: kubectl rollout status deployment/${{inputs.IMAGE_NAME}}